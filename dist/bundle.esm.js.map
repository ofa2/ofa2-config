{"version":3,"file":"bundle.esm.js","sources":["../src/index.js"],"sourcesContent":["import _ from 'lodash';\nimport filePathOneLayer from 'file-path-one-layer';\nimport path from 'path';\n\nfunction lift() {\n  let configPath = path.join(this.projectPath, 'config');\n\n  this.config = {\n    paths: {\n      projectPath: this.projectPath,\n      config: configPath,\n      envConfig: path.join(configPath, 'env'),\n    },\n  };\n\n  /* eslint-disable global-require */\n  /* eslint-disable import/no-dynamic-require */\n  return filePathOneLayer(configPath)\n    .then((files) => {\n      _.forEach(files, (file) => {\n        let config = require(file.path);\n        return _.merge(this.config, {\n          [file.name]: config.default ? config.default : config,\n        });\n      });\n    })\n    .then(() => {\n      let envPath = path.join(this.config.paths.envConfig, this.environment);\n      let config = require(envPath);\n      _.merge(this.config, config.default ? config.default : config);\n    })\n    .then(() => {\n      return this;\n    });\n}\n\nexport default lift;\n"],"names":["lift","configPath","path","join","this","projectPath","config","filePathOneLayer","then","files","forEach","file","require","_","merge","name","default","envPath","paths","envConfig","environment"],"mappings":"+FAIA,SAASA,WACHC,EAAaC,KAAKC,KAAKC,KAAKC,YAAa,sBAExCC,2BAEYF,KAAKC,mBACVJ,YACGC,KAAKC,KAAKF,EAAY,SAM9BM,iBAAiBN,GACrBO,KAAMC,MACHC,QAAQD,EAAQE,QACZL,EAASM,QAAQD,EAAKT,aACnBW,EAAEC,MAAMV,KAAKE,SACjBK,EAAKI,MAAOT,EAAOU,QAAUV,EAAOU,QAAUV,QAIpDE,KAAK,SACAS,EAAUf,KAAKC,KAAKC,KAAKE,OAAOY,MAAMC,UAAWf,KAAKgB,aACtDd,EAASM,QAAQK,KACnBH,MAAMV,KAAKE,OAAQA,EAAOU,QAAUV,EAAOU,QAAUV,KAExDE,KAAK,IACGJ"}